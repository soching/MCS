@model IPagedList<Group_Task.Models.StockEntry>
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Mvc.Core.Common;

@{
    ViewData["Title"] = "Index";
    var db = new TestDbContext();
    //get name supplier from table suppliers 
    var supplier = from s in db.Suppliers select new SelectListItem { Value = s.Id.ToString(), Text = s.Names };
    //get warehouse
    var warehouse = from w in db.Warehouses select new SelectListItem { Value = w.IdWarehouse.ToString(), Text = w.NameWarehouse };
    //get items material
    var itemmaterial = from i in db.Itemsmaterials select new SelectListItem { Value = i.ItemId.ToString(), Text = i.DescriptionKh };
    //get reference no
    var reference = from r in db.StockTransfers select new SelectListItem { Value = r.Id.ToString(), Text = r.ReferenceNo };
}

<div class="page-bar">
    <div class="page-breadcrumb">
        <a class="fw-bold font-dark text-dark " asp-controller="Streets">Stock Entry</a> |
        <span>Stock Entry</span>
    </div>
    <div class="page-toolbar">
        <i class="bi-calendar-day me-2"></i>
        <span class="thin text-uppercase hidden-xs">August 20, 2024 - September 18, 2024</span>
    </div>
</div>


<div class="my-3">
    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <a class="navbar-brand mb-0">Stock Entry</a>
            <div>
                <button type="button" class="rounded-pill list-unstyled btn-light border border-secondary me-2 p-2" data-bs-toggle="modal" data-bs-target="#addNewModal">Add New</button>
            </div>
        </div>

        <div class="card-body">
            <form method="get" asp-action="Index">
                <p>
                    <a asp-action="Index" class="btn btn-primary mb-3">All Items</a>
                    <a class="btn btn-success mb-3" asp-action="Create">Create New</a>
                    <input type="search"
                           placeholder="Enter reference no supplier description"
                           value="@ViewData["Getemployeedetails"]"
                           name="Empsearch"
                           class="form-control form-control-sm"
                           style="width: 250px; padding: 5px; font-size: 14px;" />
                </p>
            </form>

            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>Show List</th>
                        <th>ReferenceNo</th>
                        <th>TransactionDate</th>
                        <th>Supplier</th>
                        <th>Descriptions</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Loop to generate each row (using sample static data for demonstration) -->
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <button class="btn btn-link" type="button" data-bs-toggle="collapse" data-bs-target="#collapseRow-@item.Id" aria-expanded="false" aria-controls="collapseRow-@item.Id">
                                    List
                                </button>
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.ReferenceNo)</td>
                            <td>@Html.DisplayFor(modelItem => item.TransactionDate)</td>
                            <td>@Html.DisplayFor(modelItem => item.Supplier)</td>
                            <td>@Html.DisplayFor(modelItem => item.Descriptions)</td>
                            <td>
                                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                            </td>
                        </tr>
                        <!-- Collapsible row with static details -->
                        <tr class="collapse" id="collapseRow-@item.Id">
                            <td colspan="6">
                                <table class="table table-sm table-bordered mt-2">
                                    <thead>
                                        <tr>
                                            <th>No.</th>
                                            <th>Code</th>
                                            <th>Item Material</th>
                                            <th>Brand</th>
                                            <th>UOM</th>
                                            <th>Qty</th>
                                            <th>Cost</th>
                                            <th>Warehouse</th>
                                            <th>Reference</th>
                                        </tr>
                                    </thead>
                                    <tbody id="tableDataDisplay">
                                        <script>
                                            document.addEventListener("DOMContentLoaded", function () {
                                                // Retrieve data from localStorage
                                                const stockEntryData = JSON.parse(localStorage.getItem('stockEntryData'));
                                                console.log(stockEntryData)
                                            });
                                        </script>
                                    </tbody>
                                </table>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>          
        </div>
    </div>
</div>

<!-- Modal Add New -->
<div class="modal fade" id="addNewModal" tabindex="-1" aria-labelledby="addNewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl" style="max-width: 90%; height: 80vh;">
        <!-- Increased size -->
        <div class="modal-content" style="height: 100%;">
            <!-- Full height -->
            <!-- Modal Header -->
            <div class="modal-header bg-secondary text-white">
                <span class="modal-title" id="addNewModalLabel"><strong>Add New</strong></span>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <!-- Modal Body with Form -->
            <div class="modal-body p-4" style="overflow-y: auto;">
                <!-- Added scroll for content -->
                <form asp-action="Create">
                    <div class="row mb-3" style="border: 1px solid #dee2e6; border-radius: 5px; padding: 15px; background-color: #f8f9fa;">
                        <!-- Left Column (Reference No, Transaction Date, Supplier) -->
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="ReferenceNo" class="form-label"><b>Reference No.</b></label>
                                <!--<input type="text" class="form-control" id="referenceNo" placeholder="Enter reference number" required>-->
                                @Html.DropDownList("Reference", reference, new { @class = "form-control" })
                            </div>

                            <div class="mb-3">
                                <label for="TransactionDate" class="form-label"><b>Transaction Date</b></label>
                                <input type="date" class="form-control" id="transactionDate" placeholder="Enter transaction date" required>
                            </div>

                            <div class="mb-3">
                                <label for="Supplier" class="form-label"><b>Suppliers</b></label>
                                @Html.DropDownList("Supplier", supplier, new { @class = "form-control" })
                            </div>
                        </div>

                        <!-- Right Column (Description) -->
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="Descriptions" class="form-label"><strong>Description</strong> <span class="text-danger">*</span></label>
                                <textarea class="form-control" id="description" rows="7" placeholder="Enter your description" ></textarea>
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <div class="input-group">
                            <input type="text" class="form-control" id="scan" >
                            <button class="btn btn-primary" type="button" id="scanButton">Scan Now</button>
                        </div>
                    </div>

                    <div class="modal-body">
                        <table class="table table-bordered table-striped table-hover">
                            <thead class="bg-secondary text-white">
                                <tr class="text-center">
                                    <th>No.</th>
                                    <th>Warehouse</th>
                                    <th>Items Material</th>
                                    <th>Brand</th>
                                    <th>UOM</th>
                                    <th>Qty</th>
                                    <th>Cost</th>
                                    <th>Reference</th>
                                    <th class="d-flex justify-content-center align-items-center">
                                        <button type="button" id="addRow" class="btn btn-primary"><b>+</b></button>
                                    </th>
                                </tr>
                            </thead>
                            <tbody id="tableBody">     
                                
                            </tbody>
                        </table>
                    </div>

                    <script>
                        $(document).ready(function () {

                            // Function to renumber rows
                            function renumberRows() {
                                $('#tableBody tr').each(function (index) {
                                    $(this).find('td:first-child').html(`<b>${String(index + 1).padStart(3, '0')}</b>`);
                                });
                            }

                            // Code for adding new rows to the table
                            $('#addRow').click(function () {
                                const newRow = `
                                        <tr>
                                            <td><b>001</b></td> <!-- Placeholder; renumberRows will update this -->
                                            <td>
                                                @Html.DropDownList("Warehouse", warehouse, new { @class = "form-control" })
                                            </td>
                                            <td>
                                                @Html.DropDownList("ItemMaterial", itemmaterial, new { @class = "form-control" })
                                            </td>
                                            <td>
                                                <select class="form-control form-control-sm">
                                                    <option value="">Please choose</option>
                                                    <option value="brand1">Brand 1</option>
                                                    <option value="brand2">Brand 2</option>
                                                </select>
                                            </td>
                                            <td>
                                                <select class="form-control form-control-sm">
                                                    <option value="">Please choose</option>
                                                    <option value="uom1">UOM 1</option>
                                                    <option value="uom2">UOM 2</option>
                                                </select>
                                            </td>
                                            <td>
                                                <input type="number" class="form-control form-control-sm" min="0" step="0.01" />
                                            </td>
                                            <td>
                                                <input type="number" class="form-control form-control-sm" min="0" step="0.01" />
                                            </td>
                                            <td>
                                                <input type="text" class="form-control form-control-sm" />
                                            </td>
                                            <td>
                                                <button type="button" class="btn btn-danger btn-sm deleteRow">Delete</button>
                                            </td>
                                        </tr>`;

                                $('#tableBody').append(newRow);
                                renumberRows(); // Update row numbers
                            });

                            // Code for removing a row from the table and renumbering
                            $('#tableBody').on('click', '.deleteRow', function () {
                                $(this).closest('tr').remove();
                                renumberRows(); // Update row numbers
                            });

                            // Set today's date in the TransactionDate field
                            const today = new Date();
                            const formattedDate = today.toISOString().split('T')[0];
                            document.getElementById("transactionDate").value = formattedDate;


                            // Code for storing data in LocalStorage
                            $('form').on('submit', function (event) {
                                event.preventDefault();

                                const tableData = [];
                                $('#tableBody tr').each(function () {
                                    const rowData = {
                                        warehouse: $(this).find('select[name="Warehouse"]').val(),
                                        itemMaterial: $(this).find('select[name="ItemMaterial"]').val(),
                                        brand: $(this).find('select').eq(1).val(),
                                        uom: $(this).find('select').eq(2).val(),
                                        qty: $(this).find('input').eq(0).val(),
                                        cost: $(this).find('input').eq(1).val(),
                                        reference: $(this).find('input').eq(2).val(),
                                    };
                                    tableData.push(rowData);
                                });

                                // Store data in localStorage and navigate to the homepage
                                localStorage.setItem('stockEntryData', JSON.stringify(tableData));
                                window.location.href = "/StockEntries";
                            });
                        });
                    </script>

                    <!-- Submit Button and Cancel -->
                    <div class="d-flex justify-content-end mt-4">
                        <button type="button" class="btn btn-danger me-2" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary me-2" value="Create">Save & New</button>
                        <button type="submit" id="submit" class="btn btn-primary" value="Create">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


@Html.PagedListPager(Model, page => Url.Action("index", "StockEntries",
                 new { page = page }),
                                new PagedListRenderOptions
                            {
                                LiElementClasses = new string[] { "page-item" },
                                PageClasses = new string[] { "page-link" }
                            })